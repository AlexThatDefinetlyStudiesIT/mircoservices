services:
  balance-service:
    build:
      context: ../balance-service
      dockerfile: Dockerfile
    container_name: balance-service-lab5
    environment:
      SPRING_RABBITMQ_HOST: 'rabbitmq'
      SPRING_DATASOURCE_URL: 'jdbc:postgresql://balance-db:5432/balance-db'
    ports:
      - "8081:8080"
    depends_on:
      - balance-db
      - rabbitmq
    restart: unless-stopped

  balance-db:
    image: postgres:13.3
    container_name: balance-db-lab5
    networks:
      - balance-net
      - shared-net
    environment:
      POSTGRES_DB: "balance-db"
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
    volumes:
      - ./balance-db-data:/var/lib/postgresql/data
    restart: unless-stopped

  user-service:
    build:
      context: ../user-service  # Указывает на корень проекта, где находится директория user-service
      dockerfile: Dockerfile  # Путь к Dockerfile в директории user-service
    container_name: user-service-lab5
    environment:
      SPRING_DATA_REDIS_HOST: 'user-keydb'
      SPRING_RABBITMQ_HOST: 'rabbitmq'
      SPRING_DATASOURCE_URL: 'jdbc:postgresql://user-db:5432/apidemo-db'
    ports:
      - "8080:8080"
    depends_on:
      - user-keydb
      - user-db
      - rabbitmq
    restart: unless-stopped

  user-db:
    image: postgres:13.3
    container_name: user-db-lab5
    environment:
      POSTGRES_DB: "apidemo-db"
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
      PGDATA: "/var/lib/postgresql/data/pgdata"
    networks:
      - user-net
    volumes:
      - ./user-db-data:/var/lib/postgresql/data
    restart: unless-stopped

  user-keydb:
    image: "eqalpha/keydb"
    container_name: user-keydb-lab5
    command: "keydb-server /etc/keydb/redis.conf --server-threads 2"
    networks:
      - user-net
    volumes:
      - "./keydb-data:/data"
    restart: unless-stopped

  notification-service:
    build:
      context: ../notification-service  # Указывает на корень проекта, где находится директория user-service
      dockerfile: Dockerfile  # Путь к Dockerfile в директории user-service
    container_name: notification-service-lab5
    networks:
      - shared-net
    environment:
      SPRING_RABBITMQ_HOST: rabbitmq
    depends_on:
      - rabbitmq
    restart: unless-stopped

  rabbitmq:
    image: "rabbitmq:3-management"
    container_name: rabbitmq-lab5
    networks:
      - shared-net
    ports:
      - "5672:5672"
      - "15672:15672"
      - "15692:15692"  # По этому порту Prometheus может получить метрики
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
      RABBITMQ_SERVER_ADDITIONAL_ERL_ARGS: "-rabbitmq_prometheus true" # Включает плагин для отдачи метрик
    volumes:
      - ./rabbitmq-data:/var/lib/rabbitmq
    restart: unless-stopped

  # Сервис Prometheus
  prometheus:
    image: prom/prometheus:v2.44.0
    container_name: prometheus-archapp-lab5
    networks:
      - shared-net
    ports:
      - "9090:9090"   # Prometheus web UI
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml  # Конфигурационный файл
      - ./alert_rules.yml:/etc/prometheus/alert_rules.yml  # Файл с алертами
    restart: unless-stopped

  # Сервис Grafana
  grafana:
    image: grafana/grafana
    container_name: grafana-lab5
    networks:
      - shared-net
    ports:
      - "3000:3000"   # Grafana web UI
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin  # Пароль администратора
    volumes:
      - grafana-data:/var/lib/grafana
    depends_on:
      - prometheus  # Дожидается прометея
    restart: unless-stopped

  # Сервис Alertmanager
  alertmanager:
    image: prom/alertmanager:v0.24.0
    container_name: alertmanager-lab5
    networks:
      - shared-net
    ports:
      - "9093:9093"   # Alertmanager web UI
    volumes:
      - ./alertmanager.yml:/etc/alertmanager/alertmanager.yml  # Конфигурационный файл
    restart: unless-stopped

  # Тестовый SMTP сервер
  mailpit:
    image: axllent/mailpit
    container_name: mailpit-lab5
    networks:
      - shared-net
    ports:
      - "1025:1025"  # SMTP
      - "8025:8025"  # Web UI
    restart: unless-stopped

volumes:
  grafana-data:

networks:
  user-net: # сеть для user-service и его БД + keyDb
  balance-net: # сеть для balance-service и его БД
  shared-net: # общая сеть для сервисов, rabbitmq, prometheus и т.д.
